import { IUnit, UNITS } from './unit-types';

export const potentialUnits: IUnit[] = [
  {
    symbol: UNITS.GV,
    regex: new RegExp(UNITS.GV),
    detail: 'gigavolts',
    description: 'potenial unit in gigavolts',
    aliases: ['Gigavolt', 'gigavolt'],
    factor: 1e9,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.M_V,
    regex: new RegExp(UNITS.M_V),
    detail: 'megavolts',
    description: 'potenial unit in megavolts',
    aliases: ['Megavolt', 'megavolt'],
    factor: 1e6,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.KV,
    regex: new RegExp(UNITS.KV),
    detail: 'kilovolts',
    description: 'potenial unit in kilovolts',
    aliases: ['kilovolt'],
    factor: 1e3,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.HV,
    regex: new RegExp(UNITS.HV),
    detail: 'hectovolts',
    description: 'potenial unit in hectovolts',
    aliases: ['Hectovolt', 'hectovolt'],
    factor: 1e2,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.DAV,
    regex: new RegExp(UNITS.DAV),
    detail: 'decavolts',
    description: 'potenial unit in decavolts',
    aliases: ['Decavolt', 'decavolt'],
    factor: 1e1,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.V,
    regex: new RegExp(UNITS.V),
    detail: 'volts',
    description: 'potenial unit in volts',
    aliases: ['volt', 'volts'],
    type: 'potential',
    factor: 1,
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.DV,
    regex: new RegExp(UNITS.DV),
    detail: 'decivolts',
    description: 'potenial unit in decivolts',
    aliases: ['Decivolt', 'decivolt'],
    factor: 1e-1,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.CV,
    regex: new RegExp(UNITS.CV),
    detail: 'centivolts',
    description: 'potenial unit in centivolts',
    aliases: ['Centivolt', 'centivolt'],
    factor: 1e-2,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.MV,
    regex: new RegExp(UNITS.MV),
    detail: 'millivolts',
    description: 'potenial unit in millivolts',
    aliases: ['Millivolt', 'millivolt'],
    factor: 1e-3,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.MCV,
    regex: new RegExp(UNITS.MCV),
    detail: 'microvolts',
    description: 'potenial unit in microvolts',
    aliases: ['Microvolt', 'microvolt'],
    factor: 1e-6,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.NV,
    regex: new RegExp(UNITS.NV),
    detail: 'nanovolts',
    description: 'potenial unit in nanovolts',
    aliases: ['Nanovolt', 'nanovolt'],
    factor: 1e-9,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.PV,
    regex: new RegExp(UNITS.PV),
    detail: 'picovolts',
    description: 'potenial unit in picovolts',
    aliases: ['Picovolt', 'picovolt'],
    factor: 1e-12,
    type: 'potential',
    base: UNITS.V,
    min: 0,
    max: 1.79e308,
  },
];
