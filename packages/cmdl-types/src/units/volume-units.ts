import { IUnit, UNITS } from './unit-types';

export const volumeUnits: IUnit[] = [
  {
    symbol: UNITS.GL,
    regex: new RegExp(UNITS.GL),
    detail: 'gigaliters',
    description: 'volume unit in gigaliters',
    aliases: ['Gigaliter', 'gigaliter'],
    factor: 1e9,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.M_L,
    regex: new RegExp(UNITS.M_L),
    detail: 'megaliters',
    description: 'volume unit in megaliters',
    aliases: ['Megaliter', 'megaliter'],
    factor: 1e6,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.KL,
    regex: new RegExp(UNITS.KL),
    detail: 'kiloliters',
    description: 'volume unit in kiloliters',
    aliases: ['kiloliter'],
    factor: 1e3,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.HL,
    regex: new RegExp(UNITS.HL),
    detail: 'hectoliters',
    description: 'volume unit in hectoliters',
    aliases: ['Hectoliter', 'hectoliter'],
    factor: 1e2,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.DAL,
    regex: new RegExp(UNITS.DAL),
    detail: 'decaliters',
    description: 'volume unit in decaliters',
    aliases: ['Decaliter', 'decaliter'],
    factor: 1e1,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.L,
    regex: new RegExp(UNITS.L),
    detail: 'liters',
    description: 'volume unit in liters',
    aliases: ['liter', 'liters'],
    type: 'volume',
    factor: 1,
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.DL,
    regex: new RegExp(UNITS.DL),
    detail: 'deciliters',
    description: 'volume unit in deciliters',
    aliases: ['Deciliter', 'deciliter'],
    factor: 1e-1,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.CL,
    regex: new RegExp(UNITS.CL),
    detail: 'centiliters',
    description: 'volume unit in centiliters',
    aliases: ['Centiliter', 'centiliter'],
    factor: 1e-2,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.ML,
    regex: new RegExp(UNITS.ML),
    detail: 'milliliters',
    description: 'volume unit in milliliters',
    aliases: ['Milliliter', 'milliliter'],
    factor: 1e-3,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.MCL,
    regex: new RegExp(UNITS.MCL),
    detail: 'microliters',
    description: 'volume unit in microliters',
    aliases: ['Microliter', 'microliter'],
    factor: 1e-6,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.NL,
    regex: new RegExp(UNITS.NL),
    detail: 'nanoliters',
    description: 'volume unit in nanoliters',
    aliases: ['Nanoliter', 'nanoliter'],
    factor: 1e-9,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
  {
    symbol: UNITS.PL,
    regex: new RegExp(UNITS.PL),
    detail: 'picoliters',
    description: 'volume unit in picoliters',
    aliases: ['Picoliter', 'picoliter'],
    factor: 1e-12,
    type: 'volume',
    base: UNITS.ML,
    min: 0,
    max: 1.79e308,
  },
];
